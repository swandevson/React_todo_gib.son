{"ast":null,"code":"var _jsxFileName = \"/Users/son/react-todo-list/react_todo_gib.son/src/components/TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  text,\n  isCompleted,\n  onDelete\n}) => {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n  const handleDeleteClick = () => {\n    // Implement delete functionality here\n  };\n  const [editing, setEditing] = useState(false);\n  const [editedText, setEditedText] = useState(text);\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n  const handleSaveClick = () => {\n    setEditing(false);\n  };\n  const handleInputChange = e => {\n    setEditedText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isCompleted,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editedText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveClick,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"4KHq5LfT5h19PqcHwztgnCMpdeA=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoItem","text","isCompleted","onDelete","_s","checked","setChecked","handleCheckboxChange","handleDeleteClick","editing","setEditing","editedText","setEditedText","handleEditClick","handleSaveClick","handleInputChange","e","target","value","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/son/react-todo-list/react_todo_gib.son/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst TodoItem = ({ text, isCompleted, onDelete }) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n\n  const handleDeleteClick = () => {\n    // Implement delete functionality here\n  };\n\n  const [editing, setEditing] = useState(false);\n  const [editedText, setEditedText] = useState(text);\n\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    setEditing(false);\n  };\n\n  const handleInputChange = (e) => {\n    setEditedText(e.target.value);\n  };\n\n  return (\n    <li className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={isCompleted}\n        onChange={handleCheckboxChange}\n      />\n      {editing ? (\n        <input type=\"text\" value={editedText} onChange={handleInputChange} />\n      ) : (\n        <span>{text}</span>\n      )}\n      {editing ? (\n        <button onClick={handleSaveClick}>Save</button>\n      ) : (\n        <button onClick={handleEditClick}>Edit</button>\n      )}\n      <button onClick={handleDeleteClick}>Delete</button>\n    </li>\n  );\n};\n\nexport default TodoItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjCD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;EAAA,CACD;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACI,IAAI,CAAC;EAElD,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACEnB,OAAA;IAAIoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACvBrB,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfhB,OAAO,EAAEH,WAAY;MACrBoB,QAAQ,EAAEf;IAAqB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACDjB,OAAO,gBACNV,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACH,KAAK,EAAEP,UAAW;MAACW,QAAQ,EAAEP;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErE3B,OAAA;MAAAqB,QAAA,EAAOnB;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACnB,EACAjB,OAAO,gBACNV,OAAA;MAAQ4B,OAAO,EAAEb,eAAgB;MAAAM,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE/C3B,OAAA;MAAQ4B,OAAO,EAAEd,eAAgB;MAAAO,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC/C,eACD3B,OAAA;MAAQ4B,OAAO,EAAEnB,iBAAkB;MAAAY,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAET,CAAC;AAACtB,EAAA,CA9CIJ,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}