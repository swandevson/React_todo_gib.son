{"ast":null,"code":"var _jsxFileName = \"/Users/son/react-todo-list/react_todo_gib.son/src/components/TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo\n}) => {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n  const handleDeleteClick = () => {\n    // Implement delete functionality here\n  };\n  const [editing, setEditing] = useState(false);\n  const [editedText, setEditedText] = useState(todo.text);\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n  const handleSaveClick = () => {\n    // Implement save functionality here\n    setEditing(false);\n  };\n  const handleInputChange = e => {\n    setEditedText(e.target.value);\n  };\n  console.log(todo.id);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.isCompleted,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editedText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveClick,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"p70UEopqokFAMTyX/8oidyR4ZUc=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoItem","todo","_s","checked","setChecked","handleCheckboxChange","handleDeleteClick","editing","setEditing","editedText","setEditedText","text","handleEditClick","handleSaveClick","handleInputChange","e","target","value","console","log","id","class","children","type","isCompleted","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/son/react-todo-list/react_todo_gib.son/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst TodoItem = ({ todo }) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n\n  const handleDeleteClick = () => {\n    // Implement delete functionality here\n  };\n\n  const [editing, setEditing] = useState(false);\n  const [editedText, setEditedText] = useState(todo.text);\n\n  const handleEditClick = () => {\n    setEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    // Implement save functionality here\n    setEditing(false);\n  };\n\n  const handleInputChange = (e) => {\n    setEditedText(e.target.value);\n  };\n\n  console.log(todo.id);\n  return (\n    <li class=\"todo-item\" key={todo.id}>\n      <input\n        type=\"checkbox\"\n        checked={todo.isCompleted}\n        onChange={handleCheckboxChange}\n      />\n      {editing ? (\n        <input type=\"text\" value={editedText} onChange={handleInputChange} />\n      ) : (\n        <span>{todo.text}</span>\n      )}\n      {editing ? (\n        <button onClick={handleSaveClick}>Save</button>\n      ) : (\n        <button onClick={handleEditClick}>Edit</button>\n      )}\n      <button onClick={handleDeleteClick}>Delete</button>\n    </li>\n  );\n};\n\nexport default TodoItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;EAAA,CACD;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACI,IAAI,CAACU,IAAI,CAAC;EAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC/BL,aAAa,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACmB,EAAE,CAAC;EACpB,oBACErB,OAAA;IAAIsB,KAAK,EAAC,WAAW;IAAAC,QAAA,gBACnBvB,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfpB,OAAO,EAAEF,IAAI,CAACuB,WAAY;MAC1BC,QAAQ,EAAEpB;IAAqB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACDtB,OAAO,gBACNR,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACN,KAAK,EAAER,UAAW;MAACgB,QAAQ,EAAEX;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErE9B,OAAA;MAAAuB,QAAA,EAAOrB,IAAI,CAACU;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACxB,EACAtB,OAAO,gBACNR,OAAA;MAAQ+B,OAAO,EAAEjB,eAAgB;MAAAS,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE/C9B,OAAA;MAAQ+B,OAAO,EAAElB,eAAgB;MAAAU,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC/C,eACD9B,OAAA;MAAQ+B,OAAO,EAAExB,iBAAkB;MAAAgB,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAhB1B5B,IAAI,CAACmB,EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiB9B,CAAC;AAET,CAAC;AAAC3B,EAAA,CAhDIF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}